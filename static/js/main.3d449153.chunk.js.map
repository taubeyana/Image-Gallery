{"version":3,"sources":["logo.png","store/actions.js","common/Search/Search.js","components/Header/Header.js","components/Image/Image.js","components/Gallery/Gallery.js","store/reducers.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","setSearchValue","payload","type","incrementPageNumber","getImagesFromServer","searchValue","store","getState","pageNum","pageNumber","totalImages","Math","floor","window","innerWidth","ceil","innerHeight","dispatch","axios","get","concat","then","res","Object","toConsumableArray","data","photos","photo","setFetchStatus","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","current","value","React","createRef","react_default","a","createElement","className","Search_default","placeholder","onChange","ref","Component","connect","Header","src","logo","alt","common_Search_Search","Image","imageUrl","farm","server","id","secret","title","Gallery","handleScroll","round","document","documentElement","scrollTop","offsetHeight","onscroll","isLoading","react_spinners","images","map","image","components_Image_Image","key","state","initialState","rootReducer","arguments","length","undefined","action","objectSpread","loggerMiddleware","createLogger","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","configureStore","App","es","components_Header_Header","components_Gallery_Gallery","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d449153.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b0fc0232.png\";","import axios from 'axios';\r\nimport {store} from '../App';\r\nexport const SET_SEARCH_VALUE = \"SET_SEARCH_VALUE\";\r\nexport const GET_IMAGES = \"GET_MOVIE\";\r\nexport const CLEAR_IMAGES = \"CLEAR_IMAGES\";\r\nexport const SET_FETCH_STATUS = \"SET_FETCH_STATUS\";\r\nexport const INCREMENT_PAGE_NUMBER = \"INCREMENT_PAGE_NUMBER\";\r\n\r\nexport const setSearchValue = (payload) => ({\r\n    type: SET_SEARCH_VALUE,\r\n    payload\r\n})\r\nexport const setFetchStatus = (payload) => ({\r\n    type: SET_FETCH_STATUS,\r\n    payload\r\n})\r\n\r\nexport const getImages = (payload) => ({\r\n    type: GET_IMAGES,\r\n    payload\r\n})\r\nexport const clearImages = () => ({\r\n    type: CLEAR_IMAGES,\r\n})\r\nexport const incrementPageNumber = () => ({\r\n    type: INCREMENT_PAGE_NUMBER\r\n})\r\n\r\nexport const getImagesFromServer = () => {\r\n    const searchValue = store.getState().searchValue;\r\n    const pageNum = store.getState().pageNumber;\r\n    \r\n    let imagesPerRow = Math.floor(window.innerWidth / 250);\r\n    let rowsNumber = Math.ceil(window.innerHeight / 400);\r\n    let totalImages = imagesPerRow * (rowsNumber + 1);\r\n    let nextImages;\r\n\r\n    return dispatch => {\r\n        axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=bac9f1ccfd854f27894fd47c4f01b1e8&text=${searchValue}&per_page=${totalImages}&page=${pageNum}&content_type=1&is_getty=1&format=json&nojsoncallback=1`)\r\n        .then(res => nextImages = [...res.data.photos.photo])\r\n        .then(data => {\r\n            if (searchValue && pageNum === 2 ) dispatch(clearImages())\r\n            dispatch(getImages(data))\r\n            dispatch(setFetchStatus(false))\r\n        })\r\n    }\r\n}","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchValue, getImagesFromServer} from '../../store/actions'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport './Search.css';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchValue = React.createRef();\r\n    }\r\n\r\n    handleChange = () => {\r\n        this.props.dispatch(setSearchValue(this.searchValue.current.value))\r\n        this.props.dispatch(getImagesFromServer())\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = 'search'>\r\n                <SearchIcon />\r\n                <input \r\n                    placeholder = 'Search...'\r\n                    onChange = { this.handleChange } \r\n                    ref = { this.searchValue }>\r\n                </input>\r\n            </div>\r\n        ) \r\n    }\r\n} \r\nexport default connect()(Search);","import React from 'react';\r\nimport './Header.css';\r\nimport Search from '../../common/Search/Search'\r\nimport  logo  from '../../logo.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className = 'header'>\r\n        <div className = 'logo-wrapper'> \r\n            <img src = { logo } alt= 'logo' className = 'logo' />\r\n            <div className = 'text-wrapper'> \r\n                <h1> venn </h1>\r\n                <span> Image Gallery </span>\r\n            </div>\r\n        </div>\r\n        <Search/>\r\n        </div>)\r\n    }\r\n    \r\nexport default Header;","import React from 'react';\r\nimport './Image.css';\r\n\r\nconst Image = props => {\r\n    const imageUrl = `https://farm${props.data.farm}.staticflickr.com/${props.data.server}/${props.data.id}_${props.data.secret}_z.jpg`;\r\n    return (\r\n        <div className = 'image'>\r\n            <img src = { imageUrl } alt = { props.data.title }  /> \r\n            <div className = 'image-descr'> <span>{ props.data.title }</span></div>\r\n        </div>)\r\n}\r\n\r\nexport default Image;","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Gallery.css';\r\nimport Image from '../Image/Image';\r\nimport { getImagesFromServer, incrementPageNumber } from '../../store/actions';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nclass Gallery extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        window.onscroll = () => {\r\n            this.handleScroll()\r\n          };\r\n    }\r\n    handleScroll = () => {\r\n        if (Math.round(window.innerHeight + \r\n            document.documentElement.scrollTop) === \r\n            document.documentElement.offsetHeight + 130) {\r\n                this.props.dispatch(incrementPageNumber());\r\n                this.props.dispatch(getImagesFromServer());\r\n          }\r\n    }\r\n    componentDidMount() {\r\n        this.props.dispatch(getImagesFromServer());\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"gallery\">\r\n                { this.props.isLoading ? <ClipLoader/> : \r\n                 this.props.images.map(image => \r\n                    <Image data = { image } key = { image.id }/>)\r\n                }\r\n            </div>)\r\n    }\r\n} \r\n    \r\nconst mapStateToProps = state => ({\r\n    images: state.images,\r\n    isLoading: state.isLoading,\r\n})    \r\nexport default connect(mapStateToProps)(Gallery);\r\n","import {\r\n    SET_SEARCH_VALUE, \r\n    INCREMENT_PAGE_NUMBER, \r\n    GET_IMAGES, \r\n    SET_FETCH_STATUS, \r\n    CLEAR_IMAGES } \r\n    from '../store/actions'\r\n\r\nconst initialState = {\r\n    images: [],\r\n    searchValue: 0,\r\n    isLoading: true,\r\n    pageNumber: 2\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_SEARCH_VALUE:\r\n            return ({\r\n                ...state, \r\n                searchValue: action.payload,\r\n                pageNumber: 2\r\n            })\r\n        case SET_FETCH_STATUS:\r\n            return ({\r\n                ...state, \r\n                isLoading: action.payload\r\n            })\r\n        case INCREMENT_PAGE_NUMBER:\r\n            return ({\r\n                ...state, \r\n                pageNumber: ++ state.pageNumber\r\n            })\r\n        case GET_IMAGES:\r\n            return ({\r\n                ...state, \r\n                images: [ ...state.images, ...action.payload ]\r\n            })\r\n        case CLEAR_IMAGES:\r\n            return ({\r\n                ...state, \r\n                images: []\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import rootReducer from './reducers';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst configureStore = () => {\r\n    return createStore(\r\n        rootReducer,\r\n        composeWithDevTools(\r\n            applyMiddleware(\r\n                thunkMiddleware,\r\n                loggerMiddleware\r\n            )\r\n        )\r\n    )\r\n}\r\nexport default configureStore;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport Header from './components/Header/Header';\nimport Gallery from './components/Gallery/Gallery';\nimport configureStore from './store/configureStore';\nexport const store = configureStore()\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = { store }>\n        <div className=\"App\">\n          <Header/>\n          <Gallery />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}